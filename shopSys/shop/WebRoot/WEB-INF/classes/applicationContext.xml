<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd">
		
	<!-- 配置Spring配置容器时候所需要扫描的包 -->	
	<context:component-scan base-package="cn.shop"></context:component-scan>
	
		<!-- 配置数据库信息  -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver"></property>
		<property name="jdbcUrl" value="jdbc:mysql:///shop"></property>
		<property name="user" value="root"></property>
		<property name="password" value="123"></property>
	</bean>
	
	<!-- 配置hibernateTemplate -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate5.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<!-- 因为在hibernate核心配置文件之中  没有数据库的配置  数据库配置在Spring里面配置 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- <property name="configLocations" value="classpath:hibernate.cfg.xml"></property> -->
 		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<!-- <prop key="hibernate.show_sql">true</prop> -->
				<prop key="hibernate.format_sql">true</prop>
				<!-- <prop key="hibernate.connection.autocommit">false</prop> -->
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		<!-- 配置Hibernate的映射文件 -->
		<property name="mappingResources">
			<list>
				<value>cn/shop/user/vo/User.hbm.xml</value>
				<value>cn/shop/category/vo/Category.hbm.xml</value>
				<value>cn/shop/product/vo/Product.hbm.xml</value>
				<value>cn/shop/categorysecond/vo/CategorySecond.hbm.xml</value>
				<value>cn/shop/order/vo/Order.hbm.xml</value>
				<value>cn/shop/order/vo/OrderItem.hbm.xml</value>
				<value>cn/shop/adminuser/vo/AdminUser.hbm.xml</value>
			</list>
		</property>
 	</bean>
 	
 	<!-- 配置事务管理器 -->
 	<bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
 		<property name="sessionFactory" ref="sessionFactory"></property>
 	</bean>
 	<!-- 开启Spring对事务注解的支持 -->
 	<tx:annotation-driven transaction-manager="transactionManager"/>
 	
 	
 	
 	<!-- 在业务层需要使用事务的地方加上注解 -->
 	
 	<!-- 配置首页的action访问 -->
 	<bean id="indexAction" class="cn.shop.index.action.IndexAction" scope="prototype">
 		<property name="categoryService" ref="categoryService"></property>
 		<property name="productService" ref="productService"></property>
 	</bean>
 	
 	<!-- 配置验证码 -->
 	<bean id="checkImgAction" class="cn.shop.user.action.CheckImgAction"></bean>
 	
 	<!-- 配置Action -->
 	<bean id="userAction" class="cn.shop.user.action.UserAction" scope="prototype">
 		<property name="userService" ref="userService"></property>
 	</bean>
 	<bean id="productAction" class="cn.shop.product.action.ProductAction" scope="prototype">
 		<property name="productService" ref="productService"></property>
 	</bean>
 	<bean id="cartAction" class="cn.shop.cart.action.CartAction" scope="prototype">
 		<property name="productService" ref="productService"></property>
 	</bean>
 	<bean id="orderAction" class="cn.shop.order.action.OrderAction" scope="prototype">
 		<property name="orderService" ref="orderService"></property>
 	</bean>
 	<bean id="adminUserAction" class="cn.shop.adminuser.action.AdminUserAction" scope="prototype">
 		<property name="adminUserService" ref="adminUserService"></property>
 	</bean>
 	<bean id="adminCategoryAction" class="cn.shop.category.adminaction.AdminCategoryAction" scope="prototype">
 		<property name="categoryService" ref="categoryService"></property>
 	</bean>
 	<bean id="adminCategorySecondAction" class="cn.shop.categorysecond.adminaction.AdminCategorySecondAction" scope="prototype">
 		<property name="categorySecondService" ref="categorySecondService"></property>
 		<property name="categoryService" ref="categoryService"></property>
 	</bean>
 	<bean id="adminProductAction" class="cn.shop.product.adminaction.AdminProductAction" scope="prototype">
 		<property name="productService" ref="productService"></property>
 		<property name="categorySecondService" ref="categorySecondService"></property>
 	</bean>
 	<bean id="userAdminAction" class="cn.shop.user.adminaction.AdminUserAction" scope="prototype">
 		<property name="userService" ref="userService"></property>
 	</bean>
 	<bean id="adminOrderAction" class="cn.shop.order.adminaction.AdminOrderAction" scope="prototype">
 		<property name="orderService" ref="orderService"></property>
 	</bean>
 	
 	<!-- 配置Service -->
 	<bean id="userService" class="cn.shop.user.service.UserService">
 		<property name="userDao" ref="userDao"></property>
 	</bean>
 	<bean id="categoryService" class="cn.shop.category.service.CategoryService">
 		<property name="categoryDao" ref="categoryDao"></property>
 	</bean>
 	<bean id="productService" class="cn.shop.product.service.ProductService">
 		<property name="productDao" ref="productDao"></property>	
 	</bean>
 	<bean id="orderService" class="cn.shop.order.service.OrderService">
 		<property name="orderDao" ref="orderDao"></property>
 	</bean>
 	<bean id="adminUserService" class="cn.shop.adminuser.service.AdminUserService">
 		<property name="adminUserDao" ref="adminUserDao"></property>
 	</bean>
 	<bean id="categorySecondService" class="cn.shop.categorysecond.service.CategorySecondService">
 		<property name="categorySecondDao" ref="categorySecond"></property>
 	</bean>
 	
 	<!-- 配置Dao -->
 	<bean id="userDao" class="cn.shop.user.dao.UserDao">
 		<property name="hibernateTemplate" ref="hibernateTemplate"></property>
 	</bean>
 	<bean id="categoryDao" class="cn.shop.category.dao.CategoryDao">
 		<property name="hibernateTemplate" ref="hibernateTemplate"></property>
 	</bean>
 	<bean id="productDao" class="cn.shop.product.dao.ProductDao">
 		<property name="hibernateTemplate" ref="hibernateTemplate"></property>
 	</bean>
 	<bean id="orderDao" class="cn.shop.order.dao.OrderDao">
 		<property name="hibernateTemplate" ref="hibernateTemplate"></property>
 	</bean>
 	<bean id="adminUserDao" class="cn.shop.adminuser.dao.AdminUserDao">
 		<property name="hibernateTemplate" ref="hibernateTemplate"></property>
 	</bean>
 	<bean id="categorySecond" class="cn.shop.categorysecond.dao.CategorySecondDao">
 		<property name="hibernateTemplate" ref="hibernateTemplate"></property>
 	</bean>
</beans>